<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

use function array_key_exists;
use function gettype;
use function is_array;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppDocumentTripReviewHydrator implements HydratorInterface
{
    public function __construct(private DocumentManager $dm, private ClassMetadata $class) {}

    public function hydrate(object $document, array $data, array $hints = []): array
    {
        $hydratedData = [];

        // Field(type: "id")
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        // Field(type: "string")
        if (isset($data['tripId']) || (! empty($this->class->fieldMappings['tripId']['nullable']) && array_key_exists('tripId', $data))) {
            $value = $data['tripId'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['tripId']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['tripId']->setValue($document, $return);
            $hydratedData['tripId'] = $return;
        }

        // Field(type: "string")
        if (isset($data['userId']) || (! empty($this->class->fieldMappings['userId']['nullable']) && array_key_exists('userId', $data))) {
            $value = $data['userId'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['userId']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['userId']->setValue($document, $return);
            $hydratedData['userId'] = $return;
        }

        // Field(type: "string")
        if (isset($data['userPseudo']) || (! empty($this->class->fieldMappings['userPseudo']['nullable']) && array_key_exists('userPseudo', $data))) {
            $value = $data['userPseudo'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['userPseudo']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['userPseudo']->setValue($document, $return);
            $hydratedData['userPseudo'] = $return;
        }

        // Field(type: "string")
        if (isset($data['comment']) || (! empty($this->class->fieldMappings['comment']['nullable']) && array_key_exists('comment', $data))) {
            $value = $data['comment'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['comment']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['comment']->setValue($document, $return);
            $hydratedData['comment'] = $return;
        }

        // Field(type: "int")
        if (isset($data['rating']) || (! empty($this->class->fieldMappings['rating']['nullable']) && array_key_exists('rating', $data))) {
            $value = $data['rating'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['rating']['type'];
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['rating']->setValue($document, $return);
            $hydratedData['rating'] = $return;
        }

        // Field(type: "date")
        if (array_key_exists('createdAt', $data) && ($data['createdAt'] !== null || ($this->class->fieldMappings['createdAt']['nullable'] ?? false))) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, $return === null ? null : clone $return);
            $hydratedData['createdAt'] = $return;
        }

        return $hydratedData;
    }
}